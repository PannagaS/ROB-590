<launch>
<!-- This is the same as wrist_camera, but tweaked for graspmixer experiments (3/20/2024) -->

    <arg name="robot_name" default="kmriiwa"/>
    <arg name="camera_name" default="usb_cam_$(arg robot_name)_wrist" /> <!--pannaga put this-->
    <arg name="image_topic" default="image_raw" /> <!--pannaga put this-->
    <!-- <arg name="node_namespace_0" default="apriltag_ros_continuous_node_hsrc" />
    <arg name="launch_prefix" default="" /> set to value="gdbserver localhost:10000" for remote debugging -->





    <!-- Launch camera driver -->
    <group ns="azure">  
     <include file="$(find graspmixer_demo)/launch/segmentation_testing.launch" > 
     </include>
    </group>

    <!-- pannaga added the following-->
    <!-- <node name="$(arg camera_name)" pkg="usb_cam" type="usb_cam_node" output="screen">
        <param name="camera_info_url" value="file:///home/bartonlab-user/.ros/camera_info/wrist_camera.yaml" />
        <param name="video_device" value="/dev/video0" />
        <param name="image_width" value="1280" />
        <param name="image_height" value="720" />
        <param name="pixel_format" value="yuyv" />
        <param name="camera_frame_id" value="$(arg camera_name)" />
        <param name="io_method" value="mmap" />
        <param name="camera_name" value="$(arg camera_name)"/>
    </node> -->

    <!-- <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="$(arg node_namespace_0)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" >
        Remap topics from those used in code to those on the ROS network
        <remap from="image_raw" to="/kmriiwa/rgb/image_rect_color" />   Corrected remapping
        <remap from="camera_info" to="/kmriiwa/rgb/camera_info" />   Corrected remapping  

        <param name="publish_tag_detections_image" type="bool" value="true" />       default: false 

        <rosparam command="load" file="$(find kmriiwa_commander)/config/settings.yaml" />
        <rosparam command="load" file="$(find kmriiwa_commander)/config/tags.yaml" />

    </node> -->

    <!-- Publish camera-robot offset -->
    <!--<node pkg="tf2_ros" type="static_transform_publisher" name="azure_tf_broadcaster" args="0.0690973 0.0347707 0.154071   -0.0206697 -0.0264857 0.712765 0.700597 $(arg robot_name)_link_7 rgb_camera_link" /> -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_broadcaster"
      args="0.0596482 -0.0160166 0.12456   0.683854 -0.00948061 0.729217 0.0222792 kmriiwa_link_7 camera_base" />

       <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_broadcaster"
    args="-0.070853 0.0405379 0.0795092   0.713858 0.699918 0.0166051 0.0157051 kmriiwa_tcp usb_cam_kmriiwa_wrist" />  ubs_cam_link(new)-->


  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_broadcaster"
    args= "-0.07148272666432 0.008544117702399358 0.079454070317184 0.7073381471215816 -0.023125104809866386 0.0091851019104395 0.706437853065643 kmriiwa_tcp camera_base" />  Keep this (OG) -->

<!-- <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_broadcaster"
    args= "-0.07148272666432 0.008544117702399358 0.079454070317184 0.713857854592912 0.6999181425676522 0.01660510338232496 0.015705103199002216 kmriiwa_tcp camera_base" />  Improper but rotated-->

  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_broadcaster"
    args="-0.070853 0.0405379 0.0795092   0.713858 0.699918 0.0166051 0.0157051 kmriiwa_tcp usb_cam_kmriiwa_wrist" /> -->

  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_link_broadcaster"
      args="-0.068906 0.0374458 0.0573316   0.713901 0.699436 0.0226636 0.0249244 kmriiwa_tcp usb_cam_kmriiwa_wrist" />

  <node pkg="graspmixer_demo" type="manual_calibration_pub.py" name="manual_calibration_pub" />




</launch>
